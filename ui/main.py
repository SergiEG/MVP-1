import sys, os

# –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ (–Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ –ø–∞–ø–∫–∏ ui) –≤ PYTHONPATH
ROOT_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
if ROOT_DIR not in sys.path:
    sys.path.insert(0, ROOT_DIR)

from agents.architect import ArchitectAgent
import streamlit as st
# ...

import streamlit as st
from agents.architect import ArchitectAgent

st.set_page_config(
    page_title="MVP-1: –ê–≥–µ–Ω—Ç-–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä",
    layout="wide",
)

st.title("üß± MVP-1: –ê–≥–µ–Ω—Ç-–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä")
st.markdown("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –Ω–∏–∂–µ –∏ –∞–≥–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç –µ—ë.")

agent = ArchitectAgent()

# –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã ‚Äî –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—è –æ—á–∏—â–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
with st.form("cmd_form", clear_on_submit=True):
    user_input = st.text_input("–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:")
    submitted = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

if submitted and user_input:
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
    response = agent.respond_to_command(user_input)
    st.success(f"–û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞: {response}")

# –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏¬ª
if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏"):
    tasks = agent.list_tasks()
    st.markdown("**–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:**")
    for task in tasks:
        st.write(f"- {task}")

# –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–º—è—Ç—å¬ª
if st.button("üß† –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–º—è—Ç—å"):
    memory = agent.show_memory()
    st.markdown("**–ü–∞–º—è—Ç—å –∞–≥–µ–Ω—Ç–∞:**")
    for entry in memory:
        # entry = (timestamp, command)
        ts, cmd = entry
        st.write(f"- {ts} ‚Äî {cmd}")

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
if st.button("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"):
    diag = agent.run_diagnostic()
    st.success(diag)
